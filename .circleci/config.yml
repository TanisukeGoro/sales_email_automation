version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
      - image: circleci/postgres:11.2
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:YlIJx6uH3OUb3hxN+PAiJKlC+EGZ2KYi8VHxsfdJpLk=
      - DB_CONNECTION: sqlite_testing

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      # postgresをCIで使っていないのでいらない？かも？
      # でもそもそもCI回すのが本番で動くかの確認だから、こういうコマンド動いてないとおかしいのかな？
      - run: 
          name: Install PHP Extensions
          command: apt-get update && apt-get libpq-dev && sudo docker-php-ext-install pdo_pgsql

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./composer.json" }}
            - v1-dependencies-

      - run:
          name: composer install
          working_directory: .
          command: composer config -g repos.packagist composer https://packagist.jp

      - run:
          name: composer install prestissimo
          working_directory: .
          command: composer global require hirak/prestissimo

      - run:
          name: composer install
          working_directory: .
          command: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "./composer.json" }}

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Migration & Seeding
          working_directory: .
          command: php artisan migrate --seed

      - run:
          name: Featuretest
          working_directory: .
          command: ./vendor/bin/phpunit --testdox

      - run:
          name: Blade Lint Test
          working_directory: .
          command: php artisan blade:lint

      - run:
          name: php-cs-fixer
          working_directory: .
          command: ./vendor/bin/php-cs-fixer fix .
